default:
  image: node:14-alpine

#services:
#  - name: docker:19.03.13-dind
#    command:
#      [
#        "--registry-mirror=https://docker.mirrors.ustc.edu.cn",
#        "--insecure-registry=192.168.188.222:5008"
#      ]

stages:
  - test
#  - build
#  - deploy

ci-test:
  stage: test
  script:
    - echo $CI_PROJECT_PATH
    - echo $CI_PROJECT_NAME

#Build Static:
#  stage: build
#  before_script:
#    - pwd
#    - ls -al
#    - npm install
#  artifacts:
#    paths:
#      - build
#  script:
#    - npm run build
#  only:
#    - tags
#
#Docker Imgae Build Dev:
#  stage: deploy
#  image: docker:19
#  only:
#    - tags
#  before_script:
#    - docker info
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  script:
#    - pwd
#    - ls -al
#    - docker build --pull -t "$CI_REGISTRY"/"$":latest .
#    - docker push "$CI_REGISTRY_IMAGE_CLIENT":latest
#    - echo "$CI_REGISTRY"
#    - echo "$CI_REGISTRY_USER"
#    - echo "$CI_REGISTRY_IMAGE_CLIENT"
#
#Docker Imgae Build:
#  stage: deploy
#  image: docker:19
#  only:
#    - tags
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#  script:
#    - echo "$CI_COMMIT_TAG"
#    - VERSION=$(echo $CI_COMMIT_TAG | sed -e 's/^v//')
#    - echo $VERSION
#    - export V=$VERSION
#    - echo "$V"
#    - docker build --pull -t "$CI_REGISTRY_IMAGE_CLIENT":"$V" .
#    - docker push "$CI_REGISTRY_IMAGE_CLIENT":"$V"
#    - ls -al

